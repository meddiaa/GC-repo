# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\gestionnaire.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from connexion_DB import connect_to_DB
from addGest.ajouterGest import Ui_ajouterGest


class Ui_gestionnaire(object):
    def setupUi(self, gestionnaire):
        gestionnaire.setObjectName("gestionnaire")
        gestionnaire.resize(1373, 576)
        gestionnaire.setStyleSheet("background-color: rgb(210, 210, 210);")
        self.gridLayout = QtWidgets.QGridLayout(gestionnaire)
        self.gridLayout.setObjectName("gridLayout")
        self.topheader = QtWidgets.QWidget(gestionnaire)
        self.topheader.setStyleSheet("\n"
"background-color:  rgb(210, 210, 210)")
        self.topheader.setObjectName("topheader")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.topheader)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.topheader)
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(26, 61, 119);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.gridLayout.addWidget(self.topheader, 0, 0, 1, 1)
        self.table = QtWidgets.QWidget(gestionnaire)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.table.setFont(font)
        self.table.setStyleSheet("\n"
"background-color:  rgb(210, 210, 210)")
        self.table.setObjectName("table")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.table)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tableWidget = QtWidgets.QTableWidget(self.table)
        font = QtGui.QFont()
        font.setPointSize(1)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("QHeaderView::section {background-color: rgb(210, 210, 210);\n"
"border: 1px solid rgb(26, 61, 119);\n"
"font-size: 12pt;\n"
"font:bold;}\n"
"QTableView {\n"
"border: 2px solid rgb(26, 61, 119);\n"
"border-top:1px solid rgb(26, 61, 119);\n"
"}\n"
"")
        self.tableWidget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.tableWidget.setMidLineWidth(0)
        self.tableWidget.setAutoScroll(True)
        self.tableWidget.setAutoScrollMargin(5)
        self.tableWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.tableWidget.setShowGrid(True)
        self.tableWidget.setCornerButtonEnabled(True)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.tableWidget.horizontalHeader().setVisible(True)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(223)
        self.tableWidget.horizontalHeader().setHighlightSections(False)
        self.tableWidget.horizontalHeader().setMinimumSectionSize(39)
        self.tableWidget.horizontalHeader().setStretchLastSection(False)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setDefaultSectionSize(38)
        self.verticalLayout.addWidget(self.tableWidget)
        self.gridLayout.addWidget(self.table, 2, 0, 1, 1)
        self.FilterButton = QtWidgets.QWidget(gestionnaire)
        self.FilterButton.setStyleSheet("\n"
"background-color:  rgb(210, 210, 210)")
        self.FilterButton.setObjectName("FilterButton")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.FilterButton)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(1000, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.ajouter = QtWidgets.QPushButton(self.FilterButton)
        self.ajouter.setMinimumSize(QtCore.QSize(50, 50))
        self.ajouter.setMaximumSize(QtCore.QSize(50, 50))
        font = QtGui.QFont()
        font.setPointSize(1)
        self.ajouter.setFont(font)
        self.ajouter.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ajouter.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"border-radius:5px")
        self.ajouter.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/add (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ajouter.setIcon(icon)
        self.ajouter.setIconSize(QtCore.QSize(35, 35))
        self.ajouter.setCheckable(True)
        self.ajouter.setObjectName("ajouter")
        self.horizontalLayout.addWidget(self.ajouter)
        spacerItem1 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.supprimer = QtWidgets.QPushButton(self.FilterButton)
        self.supprimer.setMinimumSize(QtCore.QSize(50, 50))
        self.supprimer.setMaximumSize(QtCore.QSize(50, 50))
        self.supprimer.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.supprimer.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"border-radius:5px;")
        self.supprimer.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/delete (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.supprimer.setIcon(icon1)
        self.supprimer.setIconSize(QtCore.QSize(35, 35))
        self.supprimer.setCheckable(True)
        self.supprimer.setObjectName("supprimer")
        self.horizontalLayout.addWidget(self.supprimer)
        spacerItem2 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.modifier = QtWidgets.QPushButton(self.FilterButton)
        self.modifier.setMinimumSize(QtCore.QSize(50, 50))
        self.modifier.setMaximumSize(QtCore.QSize(50, 50))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.modifier.setFont(font)
        self.modifier.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.modifier.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"border-radius:5px;")
        self.modifier.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/compose (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.modifier.setIcon(icon2)
        self.modifier.setIconSize(QtCore.QSize(35, 35))
        self.modifier.setCheckable(True)
        self.modifier.setObjectName("modifier")
        self.horizontalLayout.addWidget(self.modifier)
        spacerItem3 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.gridLayout.addWidget(self.FilterButton, 1, 0, 1, 1)


        self.retranslateUi(gestionnaire)
        QtCore.QMetaObject.connectSlotsByName(gestionnaire)
        gestionnaire.showMaximized()
        self.tableWidget.adjustSize()
        self.afficher_tout()
        self.ajouter.clicked.connect(self.afficherAjouterGest)
        self.modifier.clicked.connect(self.afficherModifierGest)
        self.tableWidget.setColumnWidth(0, 150)
        self.tableWidget.setColumnWidth(1, 350)
        self.tableWidget.setColumnWidth(2, 350)
        self.tableWidget.setColumnWidth(3, 400)
        self.tableWidget.setColumnWidth(4, 250)
        self.tableWidget.setColumnWidth(5, 350)

    def retranslateUi(self, gestionnaire):
        _translate = QtCore.QCoreApplication.translate
        gestionnaire.setWindowTitle(_translate("gestionnaire", "membre"))
        self.label.setText(_translate("gestionnaire", "Gestion Des Gestionnaires"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("gestionnaire", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("gestionnaire", "Nom"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("gestionnaire", "Prénom"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("gestionnaire", "Email"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("gestionnaire", "N° De Téléphone"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("gestionnaire", "Mot De Passe"))

    def update_object_list(self):
        self.afficher_tout()

    def afficherAjouterGest(self):
        self.window = QtWidgets.QDialog()
        self.ui = Ui_ajouterGest(self)
        self.ui.setupUi(self.window)
        self.window.show()

    def afficherModifierGest(self):
        id_modif = self.recherche.text()
        if id_modif == "":
            self.msg = QtWidgets.QMessageBox()
            self.msg.setIcon(QtWidgets.QMessageBox.Information)
            self.msg.setText("Veuillez saisir l'ID.")
            self.msg.setWindowTitle("Erreur")
            self.msg.exec_()
        elif self.filterdropdown.currentText() != 'ID':
            self.msg = QtWidgets.QMessageBox()
            self.msg.setIcon(QtWidgets.QMessageBox.Information)
            self.msg.setText("La modification se fait uniquement à partir de l'ID.")
            self.msg.setWindowTitle("Erreur")
            self.msg.exec_()
        else:
            connection, cursor = connect_to_DB()
            query = "SELECT * FROM adhérant WHERE ID = %s"
            cursor.execute(query, (id_modif,))
            data = cursor.fetchone()
            if not data:
                self.msg = QtWidgets.QMessageBox()
                self.msg.setIcon(QtWidgets.QMessageBox.Warning)
                self.msg.setText(f"L'ID {id_modif} n'existe pas.")
                self.msg.setWindowTitle("Erreur")
                self.msg.exec_()
                return
            else:
                self.window = QtWidgets.QMainWindow()
                self.ui = Ui_MainWindowModifierMembre(self)
                self.ui.setupUi(self.window)
                self.ui.lineEditID.setText(id_modif)
                connection, cursor = connect_to_DB()
                query = "SELECT nom, prénom, Gender, date_naissance, numéro_téléphone, email , Assuré, Bané FROM adhérant WHERE ID = %s"
                cursor.execute(query, (id_modif,))
                data = cursor.fetchone()
                if data:
                    self.ui.lineEditNom.setText(data[0])
                    self.ui.lineEditPrenom.setText(data[1])
                    self.ui.lineEditNumtlph.setText(data[4])
                    self.ui.dateEdit.setDate(data[3])
                    self.ui.lineEditEmail.setText(data[5])
                    if data[2] == 'M':
                        self.ui.checkBoxMasculin.setChecked(True)
                    elif data[2] == 'F':
                        self.ui.checkBoxFeminin.setChecked(True)

                    if data[6] == 1:
                        self.ui.checkBoxAssureOui.setChecked(True)
                    else:
                        self.ui.checkBoxAssureNon.setChecked(True)

                    if data[7] == 1:
                        self.ui.checkBoxBanedYes.setChecked(True)
                    else:
                        self.ui.checkBoxBannedNo.setChecked(True)
                cursor.close()
                self.window.show()

    def afficher_tout(self):
            connection, cursor = connect_to_DB()
            self.tableWidget.setRowCount(0)
            query = "SELECT * FROM gestionnaire"
            try:
                    cursor.execute(query)
                    results = cursor.fetchall()
                    for row_index, row_data in enumerate(results):
                            self.tableWidget.insertRow(row_index)
                            for col_index, data in enumerate(row_data):
                                    item = QtWidgets.QTableWidgetItem(str(data))
                                    item.setFont(QtGui.QFont("Arial", 15))
                                    self.tableWidget.setItem(row_index, col_index, item)
                    self.tableWidget.resizeColumnsToContents()
            except Exception as e:
                    print("Erreur lors de la récupération des données:", e)
from gestionnaires import gestionnaire_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    gestionnaire = QtWidgets.QWidget()
    ui = Ui_gestionnaire()
    ui.setupUi(gestionnaire)
    gestionnaire.show()
    sys.exit(app.exec_())
