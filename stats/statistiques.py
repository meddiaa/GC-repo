# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'stats.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtSql
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QMessageBox, QTextEdit , QLabel, QComboBox, QLineEdit
from datetime import datetime
import calendar
import locale
from connexion_DB import connect_to_DB
import matplotlib.pyplot as plt
import io
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas


class Ui_MainWindowStats(object):
    def setupUi(self, MainWindowStats):
        MainWindowStats.setObjectName("MainWindowStats")
        MainWindowStats.resize(1003, 624)
        self.centralwidget = QtWidgets.QWidget(MainWindowStats)
        self.centralwidget.setStyleSheet("QWidget#centralwidget{\n"
"border-image: url(:/background/images/image 1.png);\n"
"}")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(5, 5, 5, 5)
        self.verticalLayout.setSpacing(10)
        self.verticalLayout.setObjectName("verticalLayout")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setStyleSheet("QLabel {\n"
"qproperty-alignment: AlignCenter;\n"
"border-radius : 5px;\n"
"}")
        self.stackedWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.stackedWidget.setLineWidth(1)
        self.stackedWidget.setObjectName("stackedWidget")
        self.pageStats = QtWidgets.QWidget()
        self.pageStats.setObjectName("pageStats")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.pageStats)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget = QtWidgets.QWidget(self.pageStats)
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(50, 25, 50, 25)
        self.verticalLayout_2.setSpacing(5)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.labelNbrMembres = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelNbrMembres.setFont(font)
        self.labelNbrMembres.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelNbrMembres.setObjectName("labelNbrMembres")
        self.verticalLayout_2.addWidget(self.labelNbrMembres)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.label_3 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.labelNbrHommes = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelNbrHommes.setFont(font)
        self.labelNbrHommes.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelNbrHommes.setObjectName("labelNbrHommes")
        self.verticalLayout_2.addWidget(self.labelNbrHommes)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem1)
        self.label_5 = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label_5.setObjectName("label_5")
        self.verticalLayout_2.addWidget(self.label_5)
        self.labelNbrFemmes = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelNbrFemmes.setFont(font)
        self.labelNbrFemmes.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelNbrFemmes.setObjectName("labelNbrFemmes")
        self.verticalLayout_2.addWidget(self.labelNbrFemmes)
        self.verticalLayout_2.setStretch(0, 2)
        self.verticalLayout_2.setStretch(1, 2)
        self.verticalLayout_2.setStretch(3, 2)
        self.verticalLayout_2.setStretch(4, 2)
        self.verticalLayout_2.setStretch(6, 2)
        self.verticalLayout_2.setStretch(7, 2)
        self.horizontalLayout.addWidget(self.widget)
        self.widget_2 = QtWidgets.QWidget(self.pageStats)
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_3.setContentsMargins(50, 25, 50, 25)
        self.verticalLayout_3.setSpacing(5)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_7 = QtWidgets.QLabel(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label_7.setObjectName("label_7")
        self.verticalLayout_3.addWidget(self.label_7)
        self.labelNbrCoaches = QtWidgets.QLabel(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelNbrCoaches.setFont(font)
        self.labelNbrCoaches.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelNbrCoaches.setObjectName("labelNbrCoaches")
        self.verticalLayout_3.addWidget(self.labelNbrCoaches)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem2)
        self.label_9 = QtWidgets.QLabel(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label_9.setObjectName("label_9")
        self.verticalLayout_3.addWidget(self.label_9)
        self.labelNbrSports = QtWidgets.QLabel(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelNbrSports.setFont(font)
        self.labelNbrSports.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelNbrSports.setObjectName("labelNbrSports")
        self.verticalLayout_3.addWidget(self.labelNbrSports)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem3)
        self.label_11 = QtWidgets.QLabel(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label_11.setObjectName("label_11")
        self.verticalLayout_3.addWidget(self.label_11)
        self.labelNbrUsers = QtWidgets.QLabel(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelNbrUsers.setFont(font)
        self.labelNbrUsers.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelNbrUsers.setObjectName("labelNbrUsers")
        self.verticalLayout_3.addWidget(self.labelNbrUsers)
        self.verticalLayout_3.setStretch(0, 2)
        self.verticalLayout_3.setStretch(1, 2)
        self.verticalLayout_3.setStretch(3, 2)
        self.verticalLayout_3.setStretch(4, 2)
        self.verticalLayout_3.setStretch(6, 2)
        self.verticalLayout_3.setStretch(7, 2)
        self.horizontalLayout.addWidget(self.widget_2)
        self.widget_3 = QtWidgets.QWidget(self.pageStats)
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_4.setContentsMargins(50, 25, 50, 25)
        self.verticalLayout_4.setSpacing(5)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_2 = QtWidgets.QLabel(self.widget_3)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label_2.setObjectName("label_2")
        self.verticalLayout_4.addWidget(self.label_2)
        self.labelGainMois = QtWidgets.QLabel(self.widget_3)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelGainMois.setFont(font)
        self.labelGainMois.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelGainMois.setObjectName("labelGainMois")
        self.verticalLayout_4.addWidget(self.labelGainMois)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem4)
        self.label_6 = QtWidgets.QLabel(self.widget_3)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label_6.setObjectName("label_6")
        self.verticalLayout_4.addWidget(self.label_6)
        self.comboBox = QtWidgets.QComboBox(self.widget_3)
        self.comboBox.setMinimumSize(QtCore.QSize(0, 30))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.comboBox.setFont(font)
        self.comboBox.setStyleSheet("border-radius : 5px;\n"
"background-color: rgb(44, 44, 44);\n"
"color: rgb(255, 255, 255);\n"
"")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.verticalLayout_4.addWidget(self.comboBox)
        self.labelGainParSport = QtWidgets.QLabel(self.widget_3)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelGainParSport.setFont(font)
        self.labelGainParSport.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelGainParSport.setObjectName("labelGainParSport")
        self.verticalLayout_4.addWidget(self.labelGainParSport)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem5)
        self.label_14 = QtWidgets.QLabel(self.widget_3)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(40)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);")
        self.label_14.setObjectName("label_14")
        self.verticalLayout_4.addWidget(self.label_14)
        self.labelGainTotal = QtWidgets.QLabel(self.widget_3)
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.labelGainTotal.setFont(font)
        self.labelGainTotal.setStyleSheet("background-color: rgb(248, 248, 248);\n"
"border-radius : 5px;\n"
"")
        self.labelGainTotal.setObjectName("labelGainTotal")
        self.verticalLayout_4.addWidget(self.labelGainTotal)
        self.verticalLayout_4.setStretch(0, 2)
        self.verticalLayout_4.setStretch(1, 2)
        self.verticalLayout_4.setStretch(3, 2)
        self.verticalLayout_4.setStretch(4, 2)
        self.verticalLayout_4.setStretch(5, 2)
        self.verticalLayout_4.setStretch(7, 2)
        self.verticalLayout_4.setStretch(8, 2)
        self.horizontalLayout.addWidget(self.widget_3)
        self.stackedWidget.addWidget(self.pageStats)
        self.pageGraph = QtWidgets.QWidget()
        self.pageGraph.setObjectName("pageGraph")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.pageGraph)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.widget_4 = QtWidgets.QWidget(self.pageGraph)
        self.widget_4.setObjectName("widget_4")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.widget_4)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_4 = QtWidgets.QLabel(self.widget_4)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_5.addWidget(self.label_4)
        self.label_8 = QtWidgets.QLabel(self.widget_4)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_5.addWidget(self.label_8)
        self.horizontalLayout_2.addWidget(self.widget_4)
        self.widget_5 = QtWidgets.QWidget(self.pageGraph)
        self.widget_5.setObjectName("widget_5")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.widget_5)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_10 = QtWidgets.QLabel(self.widget_5)
        self.label_10.setObjectName("label_10")
        self.verticalLayout_6.addWidget(self.label_10)
        self.label_12 = QtWidgets.QLabel(self.widget_5)
        self.label_12.setObjectName("label_12")
        self.verticalLayout_6.addWidget(self.label_12)
        self.horizontalLayout_2.addWidget(self.widget_5)
        self.stackedWidget.addWidget(self.pageGraph)
        self.verticalLayout.addWidget(self.stackedWidget)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setMinimumSize(QtCore.QSize(50, 30))
        self.pushButton.setMaximumSize(QtCore.QSize(140, 16777215))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(15)
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("background-color: rgb(26, 61, 119);\n"
"color: rgb(255, 255, 255);\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton, 0, QtCore.Qt.AlignHCenter)
        spacerItem6 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem6)
        self.verticalLayout.setStretch(0, 8)
        MainWindowStats.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindowStats)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindowStats)
        self.plot_graph1()
        self.plot_graph2()
        self.plot_graph3()
        self.plot_graph4()
        nombre_de_femmes = self.nbr_femmes()
        texte_1 = str(nombre_de_femmes)
        self.labelNbrFemmes.setText(texte_1)

        nombre_de_hommes = self.nbr_hommes()
        texte_2 = str(nombre_de_hommes)
        self.labelNbrHommes.setText(texte_2)

        nombre_de_membres = self.nbr_membres()
        texte_3 = str(nombre_de_membres)
        self.labelNbrMembres.setText(texte_3)

        nombre_de_sport = self.nbr_sport()
        texte_4 = str(nombre_de_sport)
        self.labelNbrSports.setText(texte_4)

        nombre_de_coach = self.nbr_coach()
        texte_5 = str(nombre_de_coach)
        self.labelNbrCoaches.setText(texte_5)

        nombre_de_utilisateurs = self.nbr_utilisateurs()
        texte_6 = str(nombre_de_utilisateurs)
        self.labelNbrUsers.setText(texte_6)

        #jour_actuel = datetime.date.today
        #mois_actuel = jour_actuel.strftime("%B").lower()
        locale.setlocale(locale.LC_TIME, "fr_FR")
        mois_actuel = datetime.now().month
        nom_du_mois = calendar.month_name[mois_actuel]
        total_1 = self.paiment_mois(nom_du_mois)
        texte_7 = str(total_1)
        self.labelGainMois.setText(texte_7)

        self.comboBox.currentTextChanged.connect(self.paiment_sport)

        total_paiment = self.total_paiments()
        texte_6 = str(total_paiment)
        self.labelGainTotal.setText(texte_6)
        MainWindowStats.showMaximized()


    def retranslateUi(self, MainWindowStats):
        _translate = QtCore.QCoreApplication.translate
        MainWindowStats.setWindowTitle(_translate("MainWindowStats", "Statistiques"))
        self.label.setWhatsThis(_translate("MainWindowStats", "<html><head/><body><p align=\"center\">Membres<br/></p></body></html>"))
        self.label.setText(_translate("MainWindowStats", "Membres"))
        self.labelNbrMembres.setText(_translate("MainWindowStats", "30"))
        self.label_3.setText(_translate("MainWindowStats", "Hommes"))
        self.labelNbrHommes.setText(_translate("MainWindowStats", "25"))
        self.label_5.setText(_translate("MainWindowStats", "Femmes"))
        self.labelNbrFemmes.setText(_translate("MainWindowStats", "5"))
        self.label_7.setText(_translate("MainWindowStats", "Coaches"))
        self.labelNbrCoaches.setText(_translate("MainWindowStats", "4"))
        self.label_9.setText(_translate("MainWindowStats", "Sports"))
        self.labelNbrSports.setText(_translate("MainWindowStats", "5"))
        self.label_11.setText(_translate("MainWindowStats", "Utilisateurs"))
        self.labelNbrUsers.setText(_translate("MainWindowStats", "2"))
        self.label_2.setText(_translate("MainWindowStats", "Ce mois (DA)"))
        self.labelGainMois.setText(_translate("MainWindowStats", "3500"))
        self.label_6.setText(_translate("MainWindowStats", "Par sport (DA)"))
        self.comboBox.setItemText(0, _translate("MainWindowStats", "Choisir le Sport"))
        self.comboBox.setItemText(1, _translate("MainWindowStats", "Judo"))
        self.comboBox.setItemText(2, _translate("MainWindowStats", "Kickk"))
        self.comboBox.setItemText(3, _translate("MainWindowStats", "Fitnesss"))
        self.comboBox.setItemText(4, _translate("MainWindowStats", "self defense"))
        self.comboBox.setItemText(5, _translate("MainWindowStats", "Karatee"))
        self.labelGainParSport.setText(_translate("MainWindowStats", "0"))
        self.label_14.setText(_translate("MainWindowStats", "Total (DA)"))
        self.labelGainTotal.setText(_translate("MainWindowStats", "121213E2141"))
        self.label_4.setText(_translate("MainWindowStats", "TextLabel"))
        self.label_8.setText(_translate("MainWindowStats", "TextLabel"))
        self.label_10.setText(_translate("MainWindowStats", "TextLabel"))
        self.label_12.setText(_translate("MainWindowStats", "TextLabel"))
        self.pushButton.setText(_translate("MainWindowStats", "Suivant"))

        # change between the stacked widgets every time the button is clicked
        self.pushButton.clicked.connect(lambda: self.stackedWidget.setCurrentIndex((self.stackedWidget.currentIndex() + 1) % 2))



    def nbr_femmes(self):
        connection, cursor = connect_to_DB()
        query = "SELECT COUNT(*) FROM adhérant WHERE Gender = 'F'"
        cursor.execute(query)
        nombre_de_femmes = cursor.fetchone()[0]
        return nombre_de_femmes
    def nbr_hommes(self):
        connection, cursor = connect_to_DB()
        query = "SELECT COUNT(*) FROM adhérant WHERE Gender = 'M'"
        cursor.execute(query)
        nombre_de_hommes = cursor.fetchone()[0]
        return nombre_de_hommes
    def nbr_membres(self):
        connection, cursor = connect_to_DB()
        query = "SELECT COUNT(*) FROM adhérant"
        cursor.execute(query)
        nombre_de_membres = cursor.fetchone()[0]
        return nombre_de_membres
    def nbr_sport(self):
        connection, cursor = connect_to_DB()
        query = "SELECT COUNT(*) FROM sport"
        cursor.execute(query)
        nombre_de_sport = cursor.fetchone()[0]
        return nombre_de_sport
    def nbr_coach(self):
        connection, cursor = connect_to_DB()
        query = "SELECT COUNT(*) FROM coach"
        cursor.execute(query)
        nombre_de_coach = cursor.fetchone()[0]
        return nombre_de_coach

    def nbr_utilisateurs(self):
        connection, cursor = connect_to_DB()
        query = "SELECT COUNT(*) FROM gestionnaire"
        cursor.execute(query)
        nombre_de_gestionnaires = cursor.fetchone()[0]
        return nombre_de_gestionnaires+1
    def total_paiments(self):
        return self.paiment_mois('septembre')+self.paiment_mois('octobre')+self.paiment_mois('novembre')+self.paiment_mois('décembre')+self.paiment_mois('janvier')+self.paiment_mois('février')+self.paiment_mois('mars')+self.paiment_mois('avril')+self.paiment_mois('mai')+self.paiment_mois('juin')+self.paiment_mois('juillet')
    def paiment_mois(self,mois):
        connection, cursor = connect_to_DB()
        query = f"SELECT SUM({mois}) FROM adhérant"
        cursor.execute(query)
        result = cursor.fetchone()
        total_paiements = result[0] if result else 0
        return total_paiements


    def paiment_sport(self, mois):
        connection, cursor = connect_to_DB()
        sport_choisi = self.comboBox.currentText()
        locale.setlocale(locale.LC_TIME, "fr_FR")
        mois_actuel = datetime.now().month
        mois = calendar.month_name[mois_actuel]
        try:
            cursor.execute("SELECT id_sport FROM sport WHERE nom = %s", (sport_choisi,))
            sport_id = cursor.fetchone()

            if not sport_id:
                print("Sport introuvable.")
                return None
            sport_id = sport_id[0]
            total_pai = self.get_total_paiement(mois, sport_id)
            texte_8 = str(total_pai)
            self.labelGainParSport.setText(texte_8)

        except Exception as e:
            print(f"Erreur lors du calcul du paiement du sport: {e}")
            return None


    def get_total_paiement(self, mois , id_sport):
        connection, cursor = connect_to_DB()
        cursor = None
        try:
            cursor = connection.cursor()
            adherant_ids = self.get_adherants(id_sport)
            if not adherant_ids:
                print(f"Aucun adhérant trouvé pour le sport avec ID {id_sport}.")
                return 0
            query = f"SELECT SUM({mois}) AS total_montant FROM adhérant WHERE ID IN ({', '.join(['%s'] * len(adherant_ids))})"
            cursor.execute(query, tuple(adherant_ids))
            result = cursor.fetchone()
            return result[0] if result else 0
        except Exception as e:
            print(f"Erreur lors de l'obtention du paiement total: {e}")
            return 0
        finally:
            if cursor:
                cursor.close()
            if connection:
                connection.close()

    def get_adherants(self, id_sport):
        connection, cursor = connect_to_DB()
        cursor = None
        try:
            cursor = connection.cursor()
            cursor.execute("SELECT id_adherant FROM sport_adherant WHERE id_sport = %s", (id_sport,))
            adherant_ids = cursor.fetchall()
            if not adherant_ids:
                print("Aucun adhérant trouvé pour ce sport.")
                return []
            adherants_list = [row[0] for row in adherant_ids]
            return adherants_list
        except Exception as e:
            print(f"Erreur lors de la récupération des adhérents: {e}")
            return []
        finally:
            if cursor:
                cursor.close()
            if connection:
                connection.close()

    def plot_graph1(self):
            # Exemple de requête pour récupérer des données de la base de données


            # Exemple de données de graphe
            categories = ["Homme","Femme"]

            valeurs=[self.nbr_hommes(),self.nbr_femmes()]
            # Création du graphe
            self.fig, self.ax = plt.subplots(figsize=(6, 4))

            self.ax.bar(categories, valeurs)
            self.ax.set_xlabel('SEXE')
            self.ax.set_ylabel('Nombre')
            self.ax.set_title('Nombre d\'Hommes et de Femmes')
            self.ax.tick_params(axis='x', rotation=25)
            self.fig.tight_layout()
            buffer = io.BytesIO()

            plt.savefig(buffer, format='png')
            buffer.seek(0)
            image = QtGui.QImage.fromData(buffer.getvalue())

    # Afficher l'image dans le QLabel
            pixmap = QtGui.QPixmap.fromImage(image)
            self.label_4.setPixmap(pixmap)

    def plot_graph2(self):
            connection, cursor = connect_to_DB()
            # Exemple de requête pour récupérer des données de la base de données
            cursor.execute("SELECT sum(septembre),sum(octobre),sum(novembre),sum(décembre),sum(janvier),sum(février),sum(mars),sum(avril),sum(mai),sum(juin),sum(juillet) FROM adhérant")
            rows = cursor.fetchone()

            # Exemple de données de graphe
            categories = ["septembre", "octobre", "novembre", "décembre",  "janvier", "février", "mars",  "avril", "mai","juin","juillet"]

            valeurs = [rows[0], rows[1], rows[2], rows[3], rows[4], rows[5], rows[6], rows[7], rows[8], rows[9],  rows[10]]

            # Création du graphe
            self.fig, self.ax = plt.subplots(figsize=(6, 4))

            self.ax.bar(categories, valeurs)
            self.ax.set_xlabel('mois')
            self.ax.set_ylabel('chiffre d\'affaire')
            self.ax.set_title('Chiffre d\'affaire par mois')
            self.ax.tick_params(axis='x', rotation=25)
            self.fig.tight_layout()
            buffer = io.BytesIO()

            plt.savefig(buffer, format='png')
            buffer.seek(0)
            image = QtGui.QImage.fromData(buffer.getvalue())

    # Afficher l'image dans le QLabel
            pixmap = QtGui.QPixmap.fromImage(image)
            self.label_8.setPixmap(pixmap)

    def plot_graph3(self):
            # Exemple de requête pour récupérer des données de la base de données


            # Exemple de données de graphe
            # Correction pour s'assurer que `categories` et `valeurs` ont la même longueur
            categories = ["karateG", "KarateF", "kick-16", "kick+16", "fitness_N-edd",
                          "fitness_F", "fitness_hit", "kick_walid", "selfD", "Judo"]

            # Assurez-vous que `valeurs` correspond au même nombre de catégories
            valeurs = [
                len(self.get_adherants(1000)),
                len(self.get_adherants(1001)),
                len(self.get_adherants(1002)),
                len(self.get_adherants(1003)),
                len(self.get_adherants(1004)),
                len(self.get_adherants(1005)),
                len(self.get_adherants(1006)),  # Correction pour éviter la duplication des ID
                len(self.get_adherants(1007)),
                len(self.get_adherants(1008)),
                len(self.get_adherants(1009))
            ]

            # Maintenant, `categories` et `valeurs` devraient avoir la même longueur
            assert len(categories) == len(
                valeurs), "Les listes 'categories' et 'valeurs' ont des longueurs différentes!"

            self.fig, self.ax = plt.subplots(figsize=(6, 4))

            self.ax.bar(categories, valeurs)
            self.ax.set_xlabel('sport')
            self.ax.set_ylabel('nombre d\'adhérants')
            self.ax.set_title('nombre d\'adhérants par sport')
            self.ax.tick_params(axis='x', rotation=25)
            self.fig.tight_layout()
            buffer = io.BytesIO()

            plt.savefig(buffer, format='png')
            buffer.seek(0)
            image = QtGui.QImage.fromData(buffer.getvalue())

    # Afficher l'image dans le QLabel
            pixmap = QtGui.QPixmap.fromImage(image)
            self.label_10.setPixmap(pixmap)


    def plot_graph4(self):
            # Exemple de requête pour récupérer des données de la base de données


            # Exemple de données de graphe
            categories = ["karateG","KarateF","kick-16","kick+16","fitness_N-edd","fitness_F","fitness_hit","kick_walid","selfD","Judo"]

            valeurs=[self.get_total_paiement("novembre",1000),self.get_total_paiement("novembre",1001),self.get_total_paiement("novembre",1002),self.get_total_paiement("novembre",1003),self.get_total_paiement("novembre",1004),self.get_total_paiement("novembre",1005),self.get_total_paiement("novembre",1006),self.get_total_paiement("novembre",1007),self.get_total_paiement("novembre",1008),self.get_total_paiement("novembre",1009)]
            # Création du graphe
            self.fig, self.ax = plt.subplots(figsize=(6, 4))

            self.ax.bar(categories, valeurs)
            self.ax.set_xlabel('sport')
            self.ax.set_ylabel('chiffre d\'affaire')
            self.ax.set_title('chiffre d\'affaire par sport')
            self.ax.tick_params(axis='x', rotation=25)
            self.fig.tight_layout()
            buffer = io.BytesIO()

            plt.savefig(buffer, format='png')
            buffer.seek(0)
            image = QtGui.QImage.fromData(buffer.getvalue())

    # Afficher l'image dans le QLabel
            pixmap = QtGui.QPixmap.fromImage(image)
            self.label_12.setPixmap(pixmap)
from stats import res_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindowStats = QtWidgets.QMainWindow()
    ui = Ui_MainWindowStats()
    ui.setupUi(MainWindowStats)
    MainWindowStats.show()
    sys.exit(app.exec_())
